<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXuUYWlb1JRpa9
        SXCWvUt3lr1Ld5W8Sm+YvEpFkrZJFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJW/ShiVu0qAlrxK2Za8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/jrFH2lprPLpngD0qAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJnMMwWWvEtmlrxK65a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W7Sv9SYDv/Njo0/zg9NP5MWjm8UGAwEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWvkszlrxK4Ja8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/aX8//zY6NP82OjT/Njo0/zY6
        NP9CSjf7X288XgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl7xKTJa8
        SvGWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/4+ySf89Qzf/Njo0/zY6
        NP82OjT/Njo0/zY6NP84PjT/WWo8hwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJa7
        SlqWvEr+lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvFP/lL+9/4mz
        4P9TZFz/Njo0/zY6NP82OjT/Njo0/zY6NP83OzX/W2s7kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACWvEgulrxK9Ja8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lb1j/5PA
        2f+Swff/ksH3/5LB9/91lrX/QElA/zY6NP82OjT/Njo0/zY6NP84PjT/Wmg9WAAAAAAAAAAAAAAAAAAA
        AAAAAAAAi7lGC5a8SuGWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W+
        hf+Swe7/ksH3/5LB9/+Swff/ksH3/5LB9/+Muev/XnSG/zg9N/82OjT/Njo0/zxCNf+CoETkjsZVCQAA
        AAAAAAAAAAAAAAAAAACWvEp5lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        S/+Uvpr/ksD2/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/gqvc/1dqef8+Rjf/g6NG/5a8
        Sv+VvUt0AAAAAAAAAAAAAAAAm7xOF5a8SvKWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+VvVb/k8DG/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Kt/D/i7XS/5W6
        S/+WvEr/lrxK/5a8SvGStkkVAAAAAAAAAACVvUt7lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lb1q/5PA4P+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/kL/1/4i0
        7v+RuIn/lrxK/5a8Sv+WvEr/lrxK/5e7SngAAAAAAAAAAJW9SteWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxM/5W+kv+SwfL/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB
        9/+NuvL/ibTf/5W8T/+WvEr/lrxK/5a8Sv+WvEr/l7xK0gAAAACZuEcZlrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lr1R/5S+k/+Twd//ksH3/5LB9/+Swff/ksHy/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB
        9/+Swff/ksH3/4q27/+PuZr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr+l7lGFpa9SUmWvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+Vvov/ksH3/5LB9/+Swff/ksHe/5S9gv+Sun7/kL7r/5LB9/+Swff/ksH3/5LB
        9/+Swff/ksH3/5LB9/+Qv/b/ibTo/5W7V/+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+VvUlGlrtLbZa8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+Twe7/k8DS/5W+ff+WvE3/lrxK/5a8Sv+Tvqz/ksH3/5LB
        9/+Swff/ksH3/5LB9/+Swff/ksH3/4268v+Ot6r/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        SmuWu0p8lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5LB6/+Twe//lLx4/5a8Sv+WvEr/lb1e/5LA
        4/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+SwPf/ibXu/5S7Yf+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lb1Le5a7SnyWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/k8DK/5LB9/+SwO3/kbuu/5S/
        ov+SwO3/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5C+9f+ItO3/lbxW/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+VvUt7lrtLbZa8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+VvGL/k8Dj/5LB
        9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/ksH3/5LB9/+Swff/jLny/4i07v+RuXr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8SmuXvEpMlrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+VvFz/ksDd/5LB9/+Swff/ksHx/5PA1P+Rv+T/ksH3/5LB9/+Swff/ksH3/5LA9/+LtuL/iLTu/464
        n/+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lr1JSZm4RxmWvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+VvVv/lL6E/5W9Zv+WvEz/kLq7/5HA9/+Swff/kr/u/5HA9v+Swff/kr/Y/464
        pv+ItO7/jLbD/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv6XuUYWAAAAAJW9SteWvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxL/5G8wf+Swfb/ksH3/5LA5P+Rup7/ksH3/5LB
        9/+Uvpr/kLiQ/4i07v+Nt7P/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/l7xK0gAAAAAAAAAAlrxJgZa8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W9Zv+SwM7/ksH3/5LB9/+SwOH/lr1e/5G8
        rv+Swff/ksH3/5W9Y/+PuJ//iLTu/5K5fP+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEt+AAAAAAAA
        AACbvE4XlrxL85a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W8U/+UvqX/k8Dz/5LB9/+Swff/k8De/5a8
        X/+WvVT/ksDp/5LB9/+SwNn/lbxW/4i16f+Ltsn/lrtP/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK8pK2
        SRUAAAAAAAAAAAAAAACVvUqHlrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEv/k8DS/5LB9/+TwOv/k7+y/5W+
        df+WvUv/lrxL/5O/uf+Swff/ksH3/5W+iP+Vu1z/kbqB/5a8S/+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+VvEuCAAAAAAAAAAAAAAAAAAAAAJK2SQ6WvErnlrxK/5a8Sv+WvEr/lrxK/5a9S/+Uv7P/lb6A/5W9
        Tv+WvEr/lrxK/5a8Vf+Tv8H/ksH3/5LB9/+Tv7z/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxJ5ZW/QAwAAAAAAAAAAAAAAAAAAAAAAAAAAJe9SUKWvEr6lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/k7+8/5LB9/+Swff/ksHi/5a8Vf+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8SvqXu0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJe9Sl2WvEr+lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+TwMb/k7+n/5W+df+WvE3/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr+lrtKWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJa8
        SmuWvEr7lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK+5W8S2oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJW7SDyWvErplrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W8SuiYvEw5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJu8TheWvEmZlrxK+Za8Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5a8SvmWvEmZm7xOFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZuEcZlbtKgJa8StmWvEr/lrxK/5a8
        Sv+WvEr/lrxK/5a8Sv+WvEr/lrxK/5W9SteXvUp/lb9KGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJe5
        RhaVvUlGlr1JcJa9S3eWvUt3lbxKb5i8SkWStkkVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////AA///gAD//gAAf/wAAB/4AAAP8AAAD+AAAAfgAAAHwAAAA8AA
        AAOAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAA8AAAAPAAAAD4AAAB/AA
        AA/4AAAf/AAAP/4AAH//AAD//8AH//////8=
</value>
  </data>
</root>